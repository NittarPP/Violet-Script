print("[ Violet Script ] Load Library")

local Starlight = loadstring(game:HttpGet("https://raw.nebulasoftworks.xyz/starlight"))()  
local NebulaIcons = loadstring(game:HttpGet("https://raw.nebulasoftworks.xyz/nebula-icon-library-loader"))()

print("[ Violet Script ] Done Library")

Starlight:Notification({
    Title = "Violet Notification",
    Icon = NebulaIcons:GetIcon("sparkle", "Material"),
    Content = "[ Violet Script ] Will start in 5s",
}, "INDEX")

print("[ Violet Script ] Will start in 5s")

wait(5)

local executorName = identifyexecutor and identifyexecutor() or getexecutorname and getexecutorname() or "Unknown"
local gameid = game.PlaceId

local success, SupportGameList = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/NittarPP/Violet-Script/refs/heads/main/setting/game-support.lua"))()
end)

local found = false

if success and type(SupportGameList) == "table" then
    for _, id in ipairs(SupportGameList) do
        if id == gameid then
            found = true
            Starlight:Destroy()
            local link = "https://raw.githubusercontent.com/NittarPP/Violet-Script/refs/heads/main/script/" .. gameid .. ".lua"
            loadstring(game:HttpGet(link))()
            break
        end
    end
end

if not found then
    warn("Game not supported: " .. tostring(gameid))
    Starlight:Notification({
        Title = "Violet Notification",
        Icon = NebulaIcons:GetIcon("sparkle", "Material"),
        Content = "[ Violet Script ] Game not supported: " .. tostring(gameid),
    }, "INDEX")
end
